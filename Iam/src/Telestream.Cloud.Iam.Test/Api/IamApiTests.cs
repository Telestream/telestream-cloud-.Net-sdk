/* 
 * IAM API
 *
 * IAM API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: cloudsupport@telestream.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Telestream.Cloud.Iam.Client;
using Telestream.Cloud.Iam.Api;
using Telestream.Cloud.Iam.Model;

namespace Telestream.Cloud.Iam.Test
{
    /// <summary>
    ///  Class for testing IamApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class IamApiTests
    {
        private IamApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new IamApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of IamApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' IamApi
            //Assert.IsInstanceOfType(typeof(IamApi), instance, "instance is a IamApi");
        }

        
        /// <summary>
        /// Test DeleteCredential
        /// </summary>
        [Test]
        public void DeleteCredentialTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteCredential(id);
            
        }
        
        /// <summary>
        /// Test GetCredential
        /// </summary>
        [Test]
        public void GetCredentialTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetCredential(id);
            //Assert.IsInstanceOf<Credential> (response, "response is Credential");
        }
        
        /// <summary>
        /// Test GetCredentials
        /// </summary>
        [Test]
        public void GetCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCredentials();
            //Assert.IsInstanceOf<CredentialsResponse> (response, "response is CredentialsResponse");
        }
        
        /// <summary>
        /// Test GetPolicy
        /// </summary>
        [Test]
        public void GetPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StatementsList policy = null;
            //var response = instance.GetPolicy(policy);
            //Assert.IsInstanceOf<Dictionary<string, bool?>> (response, "response is Dictionary<string, bool?>");
        }
        
        /// <summary>
        /// Test PostCredentials
        /// </summary>
        [Test]
        public void PostCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Credential createCredential = null;
            //var response = instance.PostCredentials(createCredential);
            //Assert.IsInstanceOf<Credential> (response, "response is Credential");
        }
        
        /// <summary>
        /// Test UpdateCredential
        /// </summary>
        [Test]
        public void UpdateCredentialTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Credential updateCredential = null;
            //var response = instance.UpdateCredential(id, updateCredential);
            //Assert.IsInstanceOf<Credential> (response, "response is Credential");
        }
        
    }

}
