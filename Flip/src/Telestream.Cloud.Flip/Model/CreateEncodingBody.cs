/* 
 * Flip API
 *
 * Description
 *
 * OpenAPI spec version: 2.0.0
 * Contact: cloudsupport@telestream.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Telestream.Cloud.Flip.Client.SwaggerDateConverter;

namespace Telestream.Cloud.Flip.Model
{
    /// <summary>
    /// CreateEncodingBody
    /// </summary>
    [DataContract]
    public partial class CreateEncodingBody :  IEquatable<CreateEncodingBody>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateEncodingBody" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateEncodingBody() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateEncodingBody" /> class.
        /// </summary>
        /// <param name="VideoId">Id of a Video that will be encoded. (required).</param>
        /// <param name="ProfileId">Id of a Profile that will be used for encoding..</param>
        /// <param name="ProfileName">A name of a Profile that will be used for encoding..</param>
        public CreateEncodingBody(string VideoId = default(string), string ProfileId = default(string), string ProfileName = default(string))
        {
            // to ensure "VideoId" is required (not null)
            if (VideoId == null)
            {
                throw new InvalidDataException("VideoId is a required property for CreateEncodingBody and cannot be null");
            }
            else
            {
                this.VideoId = VideoId;
            }
            this.ProfileId = ProfileId;
            this.ProfileName = ProfileName;
        }
        
        /// <summary>
        /// Id of a Video that will be encoded.
        /// </summary>
        /// <value>Id of a Video that will be encoded.</value>
        [DataMember(Name="video_id", EmitDefaultValue=false)]
        public string VideoId { get; set; }

        /// <summary>
        /// Id of a Profile that will be used for encoding.
        /// </summary>
        /// <value>Id of a Profile that will be used for encoding.</value>
        [DataMember(Name="profile_id", EmitDefaultValue=false)]
        public string ProfileId { get; set; }

        /// <summary>
        /// A name of a Profile that will be used for encoding.
        /// </summary>
        /// <value>A name of a Profile that will be used for encoding.</value>
        [DataMember(Name="profile_name", EmitDefaultValue=false)]
        public string ProfileName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateEncodingBody {\n");
            sb.Append("  VideoId: ").Append(VideoId).Append("\n");
            sb.Append("  ProfileId: ").Append(ProfileId).Append("\n");
            sb.Append("  ProfileName: ").Append(ProfileName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CreateEncodingBody);
        }

        /// <summary>
        /// Returns true if CreateEncodingBody instances are equal
        /// </summary>
        /// <param name="input">Instance of CreateEncodingBody to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateEncodingBody input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.VideoId == input.VideoId ||
                    (this.VideoId != null &&
                    this.VideoId.Equals(input.VideoId))
                ) && 
                (
                    this.ProfileId == input.ProfileId ||
                    (this.ProfileId != null &&
                    this.ProfileId.Equals(input.ProfileId))
                ) && 
                (
                    this.ProfileName == input.ProfileName ||
                    (this.ProfileName != null &&
                    this.ProfileName.Equals(input.ProfileName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.VideoId != null)
                    hashCode = hashCode * 59 + this.VideoId.GetHashCode();
                if (this.ProfileId != null)
                    hashCode = hashCode * 59 + this.ProfileId.GetHashCode();
                if (this.ProfileName != null)
                    hashCode = hashCode * 59 + this.ProfileName.GetHashCode();
                return hashCode;
            }
        }
    }

}
