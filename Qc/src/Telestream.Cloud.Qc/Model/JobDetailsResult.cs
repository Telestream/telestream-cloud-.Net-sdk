/* 
 * Qc API
 *
 * QC API
 *
 * OpenAPI spec version: 2.0.0
 * Contact: cloudsupport@telestream.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = Telestream.Cloud.Qc.Client.SwaggerDateConverter;

namespace Telestream.Cloud.Qc.Model
{
    /// <summary>
    /// Job type specific result
    /// </summary>
    [DataContract]
    public partial class JobDetailsResult :  IEquatable<JobDetailsResult>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JobDetailsResult" /> class.
        /// </summary>
        /// <param name="Alerts">Alerts.</param>
        public JobDetailsResult(List<Alert> Alerts = default(List<Alert>))
        {
            this.Alerts = Alerts;
        }
        
        /// <summary>
        /// Gets or Sets Alerts
        /// </summary>
        [DataMember(Name="alerts", EmitDefaultValue=false)]
        public List<Alert> Alerts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JobDetailsResult {\n");
            sb.Append("  Alerts: ").Append(Alerts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JobDetailsResult);
        }

        /// <summary>
        /// Returns true if JobDetailsResult instances are equal
        /// </summary>
        /// <param name="input">Instance of JobDetailsResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JobDetailsResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Alerts == input.Alerts ||
                    this.Alerts != null &&
                    this.Alerts.SequenceEqual(input.Alerts)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Alerts != null)
                    hashCode = hashCode * 59 + this.Alerts.GetHashCode();
                return hashCode;
            }
        }
    }

}
